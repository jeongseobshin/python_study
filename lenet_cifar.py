# -*- coding: utf-8 -*-
"""Lenet_cifar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NpT-OLVSa8fk0GmfYJoG-kNwFzq6HmPH
"""

import tensorflow as tf
import pandas as pd

(독립, 종속), _ = tf.keras.datasets.cifar10.load_data()

종속 = pd.get_dummies(종속.reshape(50000)) #1차원형태로 변경후 원핫인코딩
print(독립.shape, 종속.shape)

X = tf.keras.layers.Input(shape=[32, 32, 3])

H = tf.keras.layers.Conv2D(6, kernel_size=5, activation='swish')(X)
H = tf.keras.layers.MaxPool2D()(H)

H = tf.keras.layers.Conv2D(16, kernel_size=5, activation='swish')(H)
H = tf.keras.layers.MaxPool2D()(H)

H = tf.keras.layers.Flatten()(H)
H = tf.keras.layers.Dense(120, activation='swish')(H)
H = tf.keras.layers.Dense(84, activation='swish')(H)
Y = tf.keras.layers.Dense(10, activation='softmax')(H)
model = tf.keras.models.Model(X, Y)
model.compile(loss='categorical_crossentropy', metrics='accuracy')

model.fit(독립, 종속, epochs=10)

model.summary()